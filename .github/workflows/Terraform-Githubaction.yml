# This is a basic workflow to help you get started with Actions

name: Terraform-githubaction

on:
  push:
    branches: 
     - main
    paths:
     - 'DataFiles/**'
     
  workflow_dispatch:
    inputs:
      name:
        type: string
        description: environment
        options:
        - production
        - development
        - testing

jobs:
  changedfiles:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      first: ${{ steps.changes.outputs.all }}
      second: ${{ steps.changes.outputs.xml }}
    steps:
        # Make sure we have some code to diff.
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
         fetch-depth: 0
      - name: Get changed files
        id: changes
        # Set outputs using the command.
        run: |
          echo "all=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.push.base.sha }} ${{ github.sha }} | xargs)" >> $GITHUB_OUTPUT
          echo "xml=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.push.base.sha }} ${{ github.sha }} | grep .xml$ | xargs)" >> $GITHUB_OUTPUT
 
  printing:
    runs-on: ubuntu-latest
    # require the first job to have ran
    needs: changedfiles
    # only run there are changed files
   # if: ${{needs.changedfiles.outputs.xml}}
    steps:
      - name: echo changed files
        run: | 
         echo ${{ needs.changedfiles.outputs.first }}
         echo ${{ needs.changedfiles.outputs.second }}
         echo $(git rev-parse HEAD)
         echo "up revparse"
         echo ${{ github.sha }}
         echo "up githubsha"
         echo $(git show ${{ github.sha }}^1)
         echo "up prev"
         echo $(git diff --name-only ${{ github.sha }} ${{ github.event.push.base.sha }})
         
         echo $(git diff --name-only)
        # echo $(git ls-files -o && git checkout)
        # echo $(git status --porcelain | awk 'match($1, "D"){print $2}' | xargs git rm)
  Terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    env:
     AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_key }}
     
    defaults:
     run:
      working-directory: Terraform/

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: |
         echo ${{ github.workspace }}
         echo $GITHUB_WORKSPACE
         
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          
      - name: Terraform init
        id: init
        run: terraform init
        
      - name: Terraform plan 
        id: plan
        run: terraform plan -var workspacePath=$GITHUB_WORKSPACE
        
      - name: Terraform apply
        id: apply
        run: terraform apply -var workspacePath=$GITHUB_WORKSPACE -auto-approve
